{% extends "authenticated.jinja2" %}
{% from 'components/icon.jinja2' import icon %}


{% block head %}
{{ super() }}
<link rel="stylesheet" href="{{ url_for('static', path='/css/modules/home.css') }}">
{% endblock %}

{% block module %}
<h1>
  Operational Core - Home
</h1>



<section id="home_content">
  <div id="toastContainer" class="toast-container">
    <div class="toast">
      Hello world
    </div>
  </div>
  <div class="card">
    <div>
      <button class="primary">
        Primary Button
      </button>
    </div>

    <div>
      <button data-loading="true" class="primary button-small" disabled>
        <div class="loading-spinner loading-spinner-xs"></div>
        Primary Button with loader
      </button>
    </div>

    <div>
      <button data-icon="true" class="primary button-small">
        <div>{{ icon("close") }}</div>
        Primary Button with icon
      </button>
    </div>

    <div>
      <button class="primary" disabled>
        Primary Disabled
      </button>
    </div>

    <div>
      <button class="secondary">
        Secondary Button
      </button>
    </div>


    <div class="card">
      <div>
        <button class="danger">
          Danger Button
        </button>
      </div>


      <div>
        <button class="success">
          Success Button
        </button>

      </div>
      <div>
        <button class="warning">
          Warning Button
        </button>
      </div>
    </div>
  </div>
  </div>

  <div class="card">
    <div style="display: flex; gap:10px; flex-wrap:wrap;">
      <div>
        <input class="input-sm" type="text" placeholder="Text Input" />
        <div class="input-helper success">Enter your first name</div>
      </div>
      <div>
        <input type="password" placeholder="Text Input" />
        <div class="input-helper warning">First name should be at least 2 charecters</div>

      </div>
      <div>
        <input class="input-large" type="text" placeholder="Text Input" />
        <div class="input-helper error">Password cannot be empty</div>
      </div>
    </div>

    <div style="display: flex; flex-direction:column; gap:10px; ">
      <input type="number" placeholder="Number Input" />
    </div>

    <div style="display: flex; flex-direction:column; gap:10px; ">
      <input type="range" min="1" max="10" id="myRange">
      <input type="range" disabled id="myRange">
    </div>




    <div class="checkbox-container">
      <label class="inline-label" for="checkbox">Checkbox</label>
      <input id="checkbox" type="checkbox">
      <label class="inline-label" for="disabled-checkbox">Checkbox Disabled</label>
      <input id="disabled-checkbox" disabled type="checkbox">
    </div>

    <div style="display: flex; flex-direction:column; gap:10px; ">
      <div class="custom-select">
        <div role="combobox" aria-labelledby="select button" aria-haspopup="listbox" aria-expanded="false"
          aria-controls="select-dropdown" class="select-button">
          <span>Open this select menu</span>
          <span class="arrow"></span>
        </div>
        <ul role="listbox" id="select-dropdown" class="select-dropdown">
          <li role="option">
            <input type="radio" id="github" name="social-account" />
            <label for="github">GitHub</label>
          </li>
          <li role="option">
            <input type="radio" id="instagram" name="social-account" />
            <label for="instagram">Instagram</label>
          </li>
          <li role="option">
            <input type="radio" id="google" name="social-account" />
            <label for="google">Google</label>
          </li>
          <li role="option">
            <input type="radio" id="slack" name="social-account" />
            <label for="slack">Slack</label>
          </li>
          <li role="option">
            <input type="radio" id="microsoft" name="social-account" />
            <label for="microsoft">Microsoft</label>
          </li>
        </ul>
      </div>

      <div class="custom-select">
        <div role="combobox" aria-labelledby="select button" aria-haspopup="listbox" aria-expanded="false"
          aria-controls="select-dropdown" class="select-button">
          <div class="selected-values">
            <span class="selected-value">Github
              {{ icon("close") }}
            </span>
            <span class="selected-value">Google {{ icon("close") }}
            </span>
            <span class="selected-value">Microsoft {{ icon("close") }}
            </span>
          </div>
          <span class="arrow"></span>
        </div>
        <ul role="listbox" id="select-dropdown" class="select-dropdown">
          <li role="option">
            <input type="radio" id="github" name="social-account" />
            <label for="github">GitHub</label>
          </li>
          <li role="option">
            <input type="radio" id="instagram" name="social-account" />
            <label for="instagram">Instagram</label>
          </li>
          <li role="option">
            <input type="radio" id="google" name="social-account" />
            <label for="google">Google</label>
          </li>
          <li role="option">
            <input type="radio" id="slack" name="social-account" />
            <label for="slack">Slack</label>
          </li>
          <li role="option">
            <input type="radio" id="microsoft" name="social-account" />
            <label for="microsoft">Microsoft</label>
          </li>
        </ul>
      </div>
    </div>

    <div style="display: flex; justify-content: space-around; gap:10px; ">
      <div class="loading-spinner loading-spinner-sm"></div>
      <div class="loading-spinner"></div>
      <div class="loading-spinner loading-spinner-lg"></div>
    </div>

    <div style="display:flex; justify-content:space-between">
      <span data-text="Thanks for hovering! I'm a tooltip" class="tooltip top">Top</span>

      <span data-text="Thanks for hovering! I'm a tooltip" class="tooltip bottom">Bottom</span>

      <span data-text="Thanks for hovering! I'm a tooltip" class="tooltip left">Left</span>

      <span data-text="Thanks for hovering! I'm a tooltip" class="tooltip">Right</span>
    </div>

    <div style="display: flex; justify-content: center; align-items: center;">
      <button id="open-modal" style="flex-grow: 1;" class="primary">Open modal</button>
    </div>

    <div>
      <button>
        {{ icon("upload") }}
        <label for="file-input" class="upload-label">Choose a file</label>
        <input type="file" id="file-input" class="file-input">
        <div class="file-info">No file selected</div>
      </button>
    </div>

    <div>
      <div class="radio-container">
        <input type="radio" id="radio1" name="radio" checked>
        <label for="radio1">Radio 1</label>
      </div>
      <div class="radio-container">
        <input type="radio" id="radio2" name="radio">
        <label for="radio2">Radio 2</label>
      </div>
    </div>

    <div>
      <div class="stats-container">
        <div class="stat-element">
          <p class="stat-heading">Active users</p>
          <div class="stat-value">
            <span>1,234</span>
          </div>
        </div>
        <div class="stat-element">
          <p class="stat-heading">Account Balance</p>
          <div class="stat-value">
            <span>450000</span>
          </div>
        </div>
        <div class="stat-element">
          <p class="stat-heading">Withdraw Cost</p>
          <div class="stat-value">
            {{ icon("account") }}
            <span>0.0001</span>
          </div>
        </div>
      </div>
    </div>

    <div>
      <div class="progress-container" data-duration="30">
        <div class="progress-bar"></div>
        <div class="progress"></div>
        <span class="progress-label">0%</span>
      </div>
      <div class="progress-container" data-type="success" data-duration="10">
        <div class="progress-bar"></div>
        <div class="progress"></div>
        <span class="progress-label">0%</span>
      </div>
      <div class="progress-container" data-type="warning" data-duration="20">
        <div class="progress-bar"></div>
        <div class="progress"></div>
        <span class="progress-label">0%</span>
      </div>
      <div class="progress-container" data-type="danger" data-duration="30">
        <div class="progress-bar"></div>
        <div class="progress"></div>
        <span class="progress-label">0%</span>
      </div>
    </div>

    <button id="toast-btn">Show Toast</button>


  </div>
  </div>



  </div>

  {# Modal #}
  <dialog class="modal">
    <header class="modal-header">
      <h3>Modal header</h3>
      <span id="close-btn" class="primary close-btn">
        {{ icon("close") }}
      </span>
    </header>
    <div class="modal-content">
      <h3>this is modal content</h3>
      <p>lorem ipsum genrati lorem ipsum genrati lorem ipsum genrati lorem ipsum genrati lorem ipsum genrati lorem ipsum
        genrati lorem ipsum genrati lorem ipsum genrati lorem ipsum genrati lorem ipsum genrati lorem ipsum genrati
        lorem ipsum genrati lorem ipsum genrati lorem ipsum genrati lorem ipsum genrati lorem ipsum genrati lorem ipsum
        genrati </p>
    </div>
    <footer class="modal-footer">
      <button id="cancel-btn" class="danger">Cancel</button>
      <button id="ok-btn" class="primary">Ok</button>
    </footer>
  </dialog>




  <div class="table-container">
    <table>
      <thead>
        <tr>
          <th class="table-head">
            <input type="checkbox" id="checkbox">
          </th>
          <th class="table-head">Header 2</th>
          <th class="table-head">Header 3</th>
          <th class="table-head">Header 4</th>
          <th class="table-head">Header 5</th>
          <th class="table-head">Header 6</th>
          <th class="table-head">Header 7</th>
        </tr>
      </thead>
      <tbody>
        <tr class="table-row">
          <td class="table-data">asdk;lasdk ;lask dl;kas;lk dl;kaslk dl;sakd l;sak d;lsakl; dk;las</td>
          <td>Data 2</td>
          <td>Data 3</td>
          <td>Data 4</td>
          <td>Data 5</td>
          <td>Data 6</td>
          <td>Data 7</td>
        </tr>
        <tr class="table-row">
          <td>Data 1</td>
          <td>Data 2</td>
          <td>Data 3</td>
          <td>Data 4</td>
          <td>Data 5</td>
          <td>Data 6</td>
          <td>Data 7</td>
        </tr>
        <tr class="table-row">
          <td>Data 1</td>
          <td>Data 2</td>
          <td>Data 3</td>
          <td>Data 4</td>
          <td>Data 5</td>
          <td>Data 6</td>
          <td>Data 7</td>
        </tr>
      </tbody>
    </table>
  </div>






</section>


<script>
  // Modal Logic
  const openModal = document.getElementById("open-modal");
  const cancelBtn = document.getElementById("cancel-btn");
  const okBtn = document.getElementById("ok-btn");
  const closeModal = document.getElementById("close-btn");



  openModal.addEventListener("click", () => {
    const modal = document.querySelector(".modal");
    document.body.style.overflow = "hidden";
    modal.showModal();
  });


  closeModal.addEventListener("click", (e) => {
    const modal = document.querySelector(".modal");
    document.body.style.overflow = "auto";
    modal.close();
  });

  cancelBtn.addEventListener("click", (e) => {
    const modal = document.querySelector(".modal");
    document.body.style.overflow = "auto";
    modal.close();
  });

  okBtn.addEventListener("click", (e) => {
    const modal = document.querySelector(".modal");
    document.body.style.overflow = "auto";
    modal.close();
  });

  document.addEventListener("keydown", (e) => {
    const modal = document.querySelector(".modal");
    if (e.key === "Escape") {
      document.body.style.overflow = "auto";
      modal.close();
    }
  });

  // Progess bar logic
  const progressContainers = document.querySelectorAll('.progress-container');

  progressContainers.forEach(container => {
    const progressBar = container.querySelector('.progress');
    const progressLabel = container.querySelector('.progress-label');
    const duration = parseInt(container.dataset.duration, 10);
    const totalUpdates = 100; // Total updates to reach 100%
    const maxWidth = 100; // Max width of progress bar

    function updateProgressBar() {
      let width = 0;
      const interval = setInterval(() => {
        if (width >= maxWidth) {
          clearInterval(interval);
        } else {
          width++;
          progressBar.style.width = `${width}%`;
          progressLabel.textContent = `${width}%`;
        }
      }, duration * 1000 / totalUpdates);
    }

    updateProgressBar();
  });

  // Toast logic
  const toastBtn = document.getElementById('toast-btn');

  function showToast(message) {
    const toastContainer = document.getElementById('toastContainer');

    const toast = document.createElement('div');
    toast.className = 'toast';
    toast.innerHTML = message;

    toast.offsetHeight; // Force reflow, so CSS animation will run

    toastContainer.insertBefore(toast, toastContainer.firstChild);

    toast.classList.add('show');


    setTimeout(() => {
      toast.classList.remove('show');
      toast.addEventListener('transitionend', () => {
        toast.remove();
      });
    }, 5000);
  }

  toastBtn.addEventListener('click', () => {
    showToast('This is a toast message');
  });

</script>

{% endblock %}