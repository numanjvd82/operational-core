@import "./variables.css";

/* BUTTON */
button,
button.primary {
  border: var(--button-border-width) solid var(--primary-color);
  border-radius: var(--border-radius);
  color: var(--primary-color);
  background-color: var(--background-color-content);
  padding: var(--spacing-md) var(--spacing-lg);
  transition: color 0.2s ease-in-out, background-color 0.2s ease-in-out;
  cursor: pointer;
}

button.secondary {
  border: var(--button-border-width) solid var(--secondary-color);
  color: var(--secondary-color);
}

button.danger {
  border: var(--button-border-width) solid var(--danger-color);
  color: var(--danger-color);
}

button.success {
  border: var(--button-border-width) solid var(--success-color);
  color: var(--success-color);
}

button.warning {
  border: var(--button-border-width) solid var(--warning-color);
  color: var(--warning-color);
}

button:hover,
button.primary:hover {
  background-color: var(--primary-color);
  color: var(--text-color-contrast);
}

button.secondary:hover {
  background-color: var(--secondary-color);
  color: var(--text-color-contrast);
}

button.danger:hover {
  background-color: var(--danger-color);
  color: var(--text-color-contrast);
}

button.success:hover {
  background-color: var(--success-color);
  color: var(--text-color-contrast);
}

button.warning:hover {
  background-color: var(--warning-color);
  color: var(--text-color-contrast);
}

button:disabled,
button:disabled:hover {
  background-color: var(--disabled-color);
  border-color: var(--disabled-color);
  color: var(--text-color-light);
  cursor: not-allowed;
}

/* FORM COMPONENTS */
textarea,
select {
  border: 1.5px solid var(--border-color-dark);
  border-radius: var(--border-radius);
  background-color: var(--background-color-content);
  padding: var(--spacing);
  font-family: var(--font-family);
  transition: border-color 0.2s ease-in-out, border-width 0.2s ease-in-out,
    box-shadow 0.2s ease-in-out;
}

textarea {
  resize: vertical;
}

input:disabled,
textarea:disabled,
select:disabled {
  background-color: var(--disabled-color);
  cursor: not-allowed;
}

textarea:focus-visible,
select:focus-visible {
  outline: none;
  border-color: var(--primary-color);
}

/* CARD */
.card {
  background-color: var(--background-color-content);
  border-radius: var(--border-radius-md);
  border: var(--card-border-width) solid var(--border-color);
  padding: var(--spacing-md);
}

/* LABEL */
.inline-label {
  display: inline-block;
  margin-right: var(--spacing-md); /* Add spacing between label and input */
}

.block-label {
  display: block;
  margin-bottom: var(--spacing-sm); /* Add spacing between label and input */
  font-weight: bold; /* Optionally make the label bold */
}

/* Password input */
.password-input {
  position: relative;
}

.password-input input[type="password"] {
  padding-right: var(--spacing-xxl);
}

/* Input  */
input:not([type="range"]) {
  border-radius: var(--border-radius);
  background-color: var(--background-color-content);
  padding: var(--spacing);
  font-family: var(--font-family);
  transition: border-color 0.2s ease-in-out, border-width 0.2s ease-in-out,
    box-shadow 0.2s ease-in-out;
}

input:hover {
  border-color: var(--border-hover-color);
}

input:focus-visible {
  outline: none;
  border-width: 2px;
  border-color: var(--border-hover-color);
  box-shadow: 0 0 0.1px 0.5px var(--border-hover-color);
}

.input-sm {
  font-size: var(--font-size-xs);
}

.input-large {
  font-size: var(--font-size-md);
}

/* Checkbox */
.checkbox-container {
  display: flex;
  align-items: center;
  margin-bottom: var(--spacing-sm);
}

input[type="checkbox"] {
  /* Add if not using autoprefixer */
  -webkit-appearance: none;
  appearance: none;
  /* For iOS < 15 to remove gradient background */
  background-color: #fff;
  /* Not removed via appearance */
  margin: 0;

  font: inherit;
  color: var(--border-hover-color);
  width: 1.15em;
  height: 1.15em;
  border: 0.15em solid currentColor;
  border-radius: 0.15em;
  transform: translateY(-0.075em);
  display: grid;
  place-content: center;
  cursor: pointer;
}

input[type="checkbox"]:focus {
  outline: none;
  border-color: var(--primary-color);
}

input[type="checkbox"]::before {
  content: "";
  width: 0.7em;
  height: 0.7em;
  transform: scale(0);
  transition: 200ms transform ease-in-out;
  box-shadow: inset 1em 1em white;
  transform-origin: bottom left;
  clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
}

input[type="checkbox"]:checked::before {
  transform: scale(1);
}

input[type="checkbox"]:checked {
  background-color: #1677ff;
}

input[type="checkbox"]:disabled {
  cursor: not-allowed;
  color: grey;
}

/* Range input */

/*********** Baseline, reset styles ***********/
input[type="range"] {
  -webkit-appearance: none;
  appearance: none;
  background: transparent;
  cursor: pointer;
  width: 15rem;
}

/* Removes default focus */
input[type="range"]:focus {
  outline: none;
}

/******** Chrome, Safari, Opera and Edge Chromium styles ********/
/* slider track */
input[type="range"]::-webkit-slider-runnable-track {
  background-color: var(--border-hover-color);
  border-radius: 0.5rem;
  height: 0.5rem;
  transition: filter 0.2s ease-in-out;
}

input[type="range"]::-webkit-slider-runnable-track:hover {
  filter: brightness(1.1);
}

input[type="range"]:disabled::-webkit-slider-runnable-track:hover {
  filter: brightness(1);
}

/* slider thumb */
input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none; /* Override default look */
  appearance: none;
  margin-top: -4px; /* Centers thumb on the track */
  border: 3px solid var(--primary-color);
  background-color: #fff;
  border-radius: 0.5rem;
  height: 1rem;
  width: 1rem;
  transition: transform 0.2s ease-in-out;
  position: relative; /* Make sure it's positioned relative */
  z-index: 1; /* Place it above the track */
}

input[type="range"]::-webkit-slider-thumb:hover {
  transform: scale(1.3);
}

input[type="range"]:focus::-webkit-slider-thumb {
  transform: scale(1.3);
}

input[type="range"]:disabled::-webkit-slider-runnable-track {
  background-color: var(--disabled-range-color);
  cursor: not-allowed;
}

input[type="range"]:disabled::-webkit-slider-thumb {
  border-color: grey;
  cursor: not-allowed;
}

input[type="range"]:disabled::-webkit-slider-thumb:hover,
input[type="range"]:disabled::-webkit-slider-thumb:focus {
  transform: scale(1);
}

/*********** Firefox styles ***********/
/* slider track */
input[type="range"]::-moz-range-track {
  background-color: var(--border-hover-color);
  border-radius: 0.5rem;
  height: 0.5rem;
  transition: filter 0.2s ease-in-out;
}

input[type="range"]::-moz-range-track:hover {
  filter: brightness(1.1);
}

input[type="range"]:disabled::-moz-range-track:hover {
  filter: brightness(1);
}

/* slider thumb */
input[type="range"]::-moz-range-thumb {
  background-color: #808080;
  border: none; /*Removes extra border that FF applies*/
  border: 3px solid var(--primary-color);
  background-color: #fff;
  border-radius: 0.5rem;
  height: 1rem;
  width: 1rem;
  transition: transform 0.2s ease-in-out;
}

input[type="range"]::-moz-range-thumb:hover {
  transform: scale(1.3);
}

input[type="range"]:focus::-moz-range-thumb {
  transform: scale(1.3);
}

input[type="range"]:disabled::-moz-range-track {
  background-color: var(--disabled-range-color);
  cursor: not-allowed;
}

input[type="range"]:disabled::-moz-range-thumb {
  border-color: grey;
  cursor: not-allowed;
}

input[type="range"]:disabled::-moz-range-thumb:hover,
input[type="range"]:disabled::-moz-range-thumb:focus {
  transform: scale(1);
}
